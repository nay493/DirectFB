AC_INIT(lib/Insignia.cpp)

AC_PREREQ(2.52)


#
# Making releases:
#   INSIGNIA_MICRO_VERSION += 1;
#   INSIGNIA_INTERFACE_AGE += 1;
#   INSIGNIA_BINARY_AGE += 1;
# if any functions have been added, set INSIGNIA_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set INSIGNIA_BINARY_AGE and INSIGNIA_INTERFACE_AGE to 0.
#
INSIGNIA_MAJOR_VERSION=1
INSIGNIA_MINOR_VERSION=0
INSIGNIA_MICRO_VERSION=4
INSIGNIA_INTERFACE_AGE=0
INSIGNIA_BINARY_AGE=0
INSIGNIA_VERSION=$INSIGNIA_MAJOR_VERSION.$INSIGNIA_MINOR_VERSION.$INSIGNIA_MICRO_VERSION

AC_SUBST(INSIGNIA_MAJOR_VERSION)
AC_SUBST(INSIGNIA_MINOR_VERSION)
AC_SUBST(INSIGNIA_MICRO_VERSION)
AC_SUBST(INSIGNIA_INTERFACE_AGE)
AC_SUBST(INSIGNIA_BINARY_AGE)
AC_SUBST(INSIGNIA_VERSION)

AC_DEFINE_UNQUOTED(INSIGNIA_VERSION,"$INSIGNIA_VERSION",[The DirectFB version])

# libtool versioning
LT_RELEASE=$INSIGNIA_MAJOR_VERSION.$INSIGNIA_MINOR_VERSION
LT_CURRENT=`expr $INSIGNIA_MICRO_VERSION - $INSIGNIA_INTERFACE_AGE`
LT_BINARY=`expr $INSIGNIA_MICRO_VERSION - $INSIGNIA_BINARY_AGE`
LT_REVISION=$INSIGNIA_INTERFACE_AGE
LT_AGE=`expr $INSIGNIA_BINARY_AGE - $INSIGNIA_INTERFACE_AGE`

AC_SUBST(LT_RELEASE) 
AC_SUBST(LT_CURRENT) 
AC_SUBST(LT_BINARY)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)



PACKAGE=Insignia
VERSION=$INSIGNIA_VERSION

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

AM_INIT_AUTOMAKE($PACKAGE,$VERSION)

AC_CONFIG_HEADERS(config.h)

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_CANONICAL_HOST

AC_DISABLE_STATIC

AC_PROG_CC
AC_PROG_CXX
AC_PROG_LIBTOOL


dnl Clear default CFLAGS
if test x"$CFLAGS" = x"-g -O2"; then
  CFLAGS=
fi
  
CFLAGS="-O3 -pipe $CFLAGS"


dnl Clear default CXXFLAGS
if test x"$CXXFLAGS" = x"-g -O2"; then
  CXXFLAGS=
fi

CXXFLAGS="-O3 -pipe -std=c++0x $CXXFLAGS $CFLAGS"


if test "x$GCC" = xyes; then
  CFLAGS="-Wall $CFLAGS"
  CXXFLAGS="-Wall $CXXFLAGS"
fi



AC_DEFINE_UNQUOTED(TOLERANCE,2,[Tolerance when comparing pixels])


AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],, enable_debug=no)
if eval "test x$enable_debug = xyes"; then
  CFLAGS="$CFLAGS -g3 -DDIRECT_ENABLE_DEBUG -O1"
  CXXFLAGS="$CXXFLAGS -g3 -DDIRECT_ENABLE_DEBUG -O1"
fi


AC_ARG_ENABLE(trace, [  --enable-trace          turn on trace support [default=no]],, enable_trace=no)
if eval "test x$enable_trace = xyes"; then
  CFLAGS="$CFLAGS -finstrument-functions -fno-inline"
  CXXFLAGS="$CXXFLAGS -finstrument-functions -fno-inline"
fi
AM_CONDITIONAL(ENABLE_TRACE, test "$enable_trace" = "yes")


#
# Check for ++DFB
#
PKG_CHECK_MODULES(PPDFB, ++dfb >= 1.2.0)

PKG_CHECK_MODULES(PNG, libpng >= 1.2.2)

PKG_CHECK_MODULES(DFBINTERNAL, directfb-internal >= 1.2.0)


DATADIR=$datadir
AC_SUBST(DATADIR)

CFLAGS="$CFLAGS -Werror-implicit-function-declaration"


AC_OUTPUT([
Makefile
data/Makefile
lib/Makefile
rules/Makefile
src/Makefile
tests/Makefile
])
